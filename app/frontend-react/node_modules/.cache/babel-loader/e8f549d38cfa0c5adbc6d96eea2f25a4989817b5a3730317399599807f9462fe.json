{"ast":null,"code":"// Authentication utility functions\n\nconst BASE_URL = 'http://localhost:8000';\nconst API_URL = `${BASE_URL}/api/v1`;\nconst TOKEN_KEY = 'sports_app_token';\nconst USER_DATA_KEY = 'sports_app_user';\n\n// Login function\nexport const loginUser = async credentials => {\n  try {\n    var _credentials$password;\n    console.log(\"Attempting login with credentials:\", {\n      email: credentials.email,\n      passwordLength: (_credentials$password = credentials.password) === null || _credentials$password === void 0 ? void 0 : _credentials$password.length\n    });\n    const response = await fetch(`${API_URL}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials),\n      credentials: 'include' // Important for cookies\n    });\n    console.log(\"Login response status:\", response.status);\n    if (!response.ok) {\n      const errorData = await response.json();\n      console.error(\"Login error response:\", errorData);\n      throw new Error(typeof errorData.detail === 'string' ? errorData.detail : JSON.stringify(errorData.detail));\n    }\n    const data = await response.json();\n    console.log(\"Login successful, received data:\", {\n      userId: data.user.id,\n      username: data.user.username,\n      tokenPresent: !!data.access_token\n    });\n\n    // Store auth data in localStorage\n    localStorage.setItem('userId', data.user.id);\n    localStorage.setItem('token', data.access_token);\n    localStorage.setItem(TOKEN_KEY, data.access_token);\n    localStorage.setItem('username', data.user.username);\n    localStorage.setItem('isClubOwner', data.user.is_club_owner);\n    localStorage.setItem('role', data.user.role);\n    localStorage.setItem('isAuthenticated', 'true');\n\n    // Also save user data\n    saveUserData(data.user);\n    return data;\n  } catch (error) {\n    console.error('Login error:', error);\n    throw error;\n  }\n};\n\n// Register function\nexport const registerUser = async userData => {\n  try {\n    const response = await fetch(`${API_URL}/auth/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData),\n      credentials: 'include'\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(typeof errorData.detail === 'string' ? errorData.detail : JSON.stringify(errorData.detail));\n    }\n    const data = await response.json();\n\n    // Store auth data in localStorage\n    localStorage.setItem('userId', data.user.id);\n    localStorage.setItem('token', data.access_token);\n    localStorage.setItem('username', data.user.username);\n    localStorage.setItem('isClubOwner', data.user.is_club_owner);\n    localStorage.setItem('role', data.user.role);\n    localStorage.setItem('isAuthenticated', 'true');\n    return data;\n  } catch (error) {\n    console.error('Registration error:', error);\n    throw error;\n  }\n};\n\n// Logout function\nexport const logoutUser = async () => {\n  try {\n    console.log(\"Logging out user, clearing auth data\");\n\n    // First try to call the logout endpoint if it exists\n    try {\n      await fetch(`${API_URL}/auth/logout`, {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Authorization': `Bearer ${getToken()}`\n        }\n      });\n    } catch (error) {\n      console.warn(\"Error calling logout endpoint:\", error);\n      // Continue with client-side logout even if server logout fails\n    }\n\n    // Clear all auth data from localStorage\n    clearAuthData();\n\n    // Dispatch auth change event\n    const event = new Event('auth-change');\n    window.dispatchEvent(event);\n    return true;\n  } catch (error) {\n    console.error('Logout error:', error);\n    throw error;\n  }\n};\n\n// Check if user is authenticated\nexport const isAuthenticated = () => {\n  try {\n    const token = getToken();\n    const userId = localStorage.getItem('userId');\n    const isAuthFlag = localStorage.getItem('isAuthenticated') === 'true';\n    console.log('Auth check:', {\n      hasToken: !!token,\n      hasUserId: !!userId,\n      isAuthFlag\n    });\n\n    // If we have the explicit flag and both token and userId\n    if (isAuthFlag && token && userId) {\n      // Check token expiration only if we have a token\n      if (isTokenExpired()) {\n        console.log('Token is expired, clearing auth data');\n        clearAuthData();\n        return false;\n      }\n      return true;\n    }\n\n    // If we're missing the flag but have both token and userId\n    if (token && userId) {\n      // Set the flag since we have both token and userId\n      localStorage.setItem('isAuthenticated', 'true');\n\n      // But still check if token is expired\n      if (isTokenExpired()) {\n        console.log('Token is expired, clearing auth data');\n        clearAuthData();\n        return false;\n      }\n      return true;\n    }\n\n    // If we don't have both token and userId, clear any partial auth data\n    if (!token || !userId) {\n      console.log('Missing auth data, clearing any partial data');\n      clearAuthData();\n      return false;\n    }\n    return false;\n  } catch (err) {\n    console.error('Error checking authentication:', err);\n    return false;\n  }\n};\n\n// Get current user info\nexport const getCurrentUser = () => {\n  if (!isAuthenticated()) {\n    return null;\n  }\n  return {\n    id: localStorage.getItem('userId'),\n    username: localStorage.getItem('username'),\n    isClubOwner: localStorage.getItem('isClubOwner') === 'true',\n    role: localStorage.getItem('role')\n  };\n};\n\n/**\r\n * Save JWT token to localStorage\r\n */\nexport function saveToken(token) {\n  localStorage.setItem(TOKEN_KEY, token);\n  localStorage.setItem('token', token); // Ensure both keys are set\n}\n\n/**\r\n * Get JWT token from localStorage\r\n */\nexport const getToken = () => {\n  try {\n    // Try getting from token/sports_app_token storage keys\n    const token = localStorage.getItem('token') || localStorage.getItem(TOKEN_KEY);\n    if (token) return token;\n    return null;\n  } catch (err) {\n    console.error('Error accessing localStorage:', err);\n    return null;\n  }\n};\n\n/**\r\n * Remove JWT token from localStorage\r\n */\nexport function removeToken() {\n  localStorage.removeItem(TOKEN_KEY);\n  localStorage.removeItem('token');\n  localStorage.removeItem(USER_DATA_KEY);\n}\n\n/**\r\n * Parse JWT token to get payload\r\n */\nexport function parseToken(token) {\n  if (!token) return null;\n  try {\n    // Split the token and get the payload part (2nd part)\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(atob(base64).split('').map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)).join(''));\n    return JSON.parse(jsonPayload);\n  } catch (error) {\n    console.error('Error parsing token:', error);\n    return null;\n  }\n}\n\n/**\r\n * Check if token is expired\r\n */\nexport function isTokenExpired() {\n  const token = getToken();\n  if (!token) return true;\n  try {\n    const payload = parseToken(token);\n    if (!payload || !payload.exp) return true;\n\n    // Get current time in seconds\n    const now = Math.floor(Date.now() / 1000);\n    return payload.exp < now;\n  } catch (error) {\n    console.error('Error checking token expiration:', error);\n    return true;\n  }\n}\n\n/**\r\n * Save user data to localStorage\r\n */\nexport function saveUserData(user) {\n  if (user) {\n    localStorage.setItem(USER_DATA_KEY, JSON.stringify(user));\n  }\n}\n\n/**\r\n * Get user data from localStorage\r\n */\nexport function getUserData() {\n  const userData = localStorage.getItem(USER_DATA_KEY);\n  if (userData) {\n    try {\n      return JSON.parse(userData);\n    } catch (e) {\n      console.error('Error parsing user data:', e);\n      return null;\n    }\n  }\n  return null;\n}\n\n/**\r\n * Logout user by removing token and userData\r\n */\nexport function logout() {\n  console.log(\"Logout function called\");\n  clearAuthData();\n\n  // Force redirect to login\n  window.location.href = '/login';\n}\n\n/**\r\n * Handle authentication response from login/register\r\n */\nexport function handleAuthResponse(data) {\n  const {\n    access_token,\n    user\n  } = data;\n  if (access_token) {\n    saveToken(access_token);\n    localStorage.setItem('userId', user.id);\n    localStorage.setItem('token', access_token);\n    localStorage.setItem(TOKEN_KEY, access_token); // Ensure both keys are set\n    localStorage.setItem('username', user.username);\n    localStorage.setItem('isClubOwner', user.is_club_owner);\n    localStorage.setItem('role', user.role);\n    localStorage.setItem('isAuthenticated', 'true');\n    if (user) {\n      saveUserData(user);\n    }\n    return true;\n  }\n  return false;\n}\n\n/**\r\n * Clear all authentication data from localStorage\r\n */\nexport function clearAuthData() {\n  console.log(\"Clearing all authentication data\");\n  const keysToRemove = ['userId', 'token', TOKEN_KEY, 'username', 'isClubOwner', 'role', 'isAuthenticated', USER_DATA_KEY];\n  keysToRemove.forEach(key => {\n    if (localStorage.getItem(key)) {\n      localStorage.removeItem(key);\n    }\n  });\n\n  // Also clear any auth cookies\n  document.cookie.split(\";\").forEach(function (c) {\n    document.cookie = c.replace(/^ +/, \"\").replace(/=.*/, \"=;expires=\" + new Date().toUTCString() + \";path=/\");\n  });\n}\n\n/**\r\n * Force logout - can be used to clear any existing credentials\r\n * during development or when authentication issues occur\r\n */\nexport function forceLogout() {\n  clearAuthData();\n}\nexport default {\n  saveToken,\n  getToken,\n  removeToken,\n  isAuthenticated,\n  parseToken,\n  isTokenExpired,\n  saveUserData,\n  getUserData,\n  logout,\n  handleAuthResponse\n};","map":{"version":3,"names":["BASE_URL","API_URL","TOKEN_KEY","USER_DATA_KEY","loginUser","credentials","_credentials$password","console","log","email","passwordLength","password","length","response","fetch","method","headers","body","JSON","stringify","status","ok","errorData","json","error","Error","detail","data","userId","user","id","username","tokenPresent","access_token","localStorage","setItem","is_club_owner","role","saveUserData","registerUser","userData","logoutUser","getToken","warn","clearAuthData","event","Event","window","dispatchEvent","isAuthenticated","token","getItem","isAuthFlag","hasToken","hasUserId","isTokenExpired","err","getCurrentUser","isClubOwner","saveToken","removeToken","removeItem","parseToken","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","parse","payload","exp","now","Math","floor","Date","getUserData","e","logout","location","href","handleAuthResponse","keysToRemove","forEach","key","document","cookie","toUTCString","forceLogout"],"sources":["F:/Diplomna rabota 3/app/frontend-react/src/utils/auth.js"],"sourcesContent":["// Authentication utility functions\r\n\r\nconst BASE_URL = 'http://localhost:8000';\r\nconst API_URL = `${BASE_URL}/api/v1`;\r\nconst TOKEN_KEY = 'sports_app_token';\r\nconst USER_DATA_KEY = 'sports_app_user';\r\n\r\n// Login function\r\nexport const loginUser = async (credentials) => {\r\n  try {\r\n    console.log(\"Attempting login with credentials:\", { email: credentials.email, passwordLength: credentials.password?.length });\r\n    \r\n    const response = await fetch(`${API_URL}/auth/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(credentials),\r\n      credentials: 'include' // Important for cookies\r\n    });\r\n    \r\n    console.log(\"Login response status:\", response.status);\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      console.error(\"Login error response:\", errorData);\r\n      throw new Error(typeof errorData.detail === 'string' \r\n        ? errorData.detail \r\n        : JSON.stringify(errorData.detail));\r\n    }\r\n    \r\n    const data = await response.json();\r\n    console.log(\"Login successful, received data:\", { \r\n      userId: data.user.id, \r\n      username: data.user.username,\r\n      tokenPresent: !!data.access_token\r\n    });\r\n    \r\n    // Store auth data in localStorage\r\n    localStorage.setItem('userId', data.user.id);\r\n    localStorage.setItem('token', data.access_token);\r\n    localStorage.setItem(TOKEN_KEY, data.access_token);\r\n    localStorage.setItem('username', data.user.username);\r\n    localStorage.setItem('isClubOwner', data.user.is_club_owner);\r\n    localStorage.setItem('role', data.user.role);\r\n    localStorage.setItem('isAuthenticated', 'true');\r\n    \r\n    // Also save user data\r\n    saveUserData(data.user);\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    console.error('Login error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Register function\r\nexport const registerUser = async (userData) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/auth/register`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(userData),\r\n      credentials: 'include'\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(typeof errorData.detail === 'string' \r\n        ? errorData.detail \r\n        : JSON.stringify(errorData.detail));\r\n    }\r\n    \r\n    const data = await response.json();\r\n    \r\n    // Store auth data in localStorage\r\n    localStorage.setItem('userId', data.user.id);\r\n    localStorage.setItem('token', data.access_token);\r\n    localStorage.setItem('username', data.user.username);\r\n    localStorage.setItem('isClubOwner', data.user.is_club_owner);\r\n    localStorage.setItem('role', data.user.role);\r\n    localStorage.setItem('isAuthenticated', 'true');\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    console.error('Registration error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Logout function\r\nexport const logoutUser = async () => {\r\n  try {\r\n    console.log(\"Logging out user, clearing auth data\");\r\n    \r\n    // First try to call the logout endpoint if it exists\r\n    try {\r\n      await fetch(`${API_URL}/auth/logout`, {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        headers: {\r\n          'Authorization': `Bearer ${getToken()}`\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.warn(\"Error calling logout endpoint:\", error);\r\n      // Continue with client-side logout even if server logout fails\r\n    }\r\n    \r\n    // Clear all auth data from localStorage\r\n    clearAuthData();\r\n    \r\n    // Dispatch auth change event\r\n    const event = new Event('auth-change');\r\n    window.dispatchEvent(event);\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error('Logout error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Check if user is authenticated\r\nexport const isAuthenticated = () => {\r\n  try {\r\n    const token = getToken();\r\n    const userId = localStorage.getItem('userId');\r\n    const isAuthFlag = localStorage.getItem('isAuthenticated') === 'true';\r\n    \r\n    console.log('Auth check:', {\r\n      hasToken: !!token,\r\n      hasUserId: !!userId,\r\n      isAuthFlag\r\n    });\r\n    \r\n    // If we have the explicit flag and both token and userId\r\n    if (isAuthFlag && token && userId) {\r\n      // Check token expiration only if we have a token\r\n      if (isTokenExpired()) {\r\n        console.log('Token is expired, clearing auth data');\r\n        clearAuthData();\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n    \r\n    // If we're missing the flag but have both token and userId\r\n    if (token && userId) {\r\n      // Set the flag since we have both token and userId\r\n      localStorage.setItem('isAuthenticated', 'true');\r\n      \r\n      // But still check if token is expired\r\n      if (isTokenExpired()) {\r\n        console.log('Token is expired, clearing auth data');\r\n        clearAuthData();\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n    \r\n    // If we don't have both token and userId, clear any partial auth data\r\n    if (!token || !userId) {\r\n      console.log('Missing auth data, clearing any partial data');\r\n      clearAuthData();\r\n      return false;\r\n    }\r\n    \r\n    return false;\r\n  } catch (err) {\r\n    console.error('Error checking authentication:', err);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Get current user info\r\nexport const getCurrentUser = () => {\r\n  if (!isAuthenticated()) {\r\n    return null;\r\n  }\r\n  \r\n  return {\r\n    id: localStorage.getItem('userId'),\r\n    username: localStorage.getItem('username'),\r\n    isClubOwner: localStorage.getItem('isClubOwner') === 'true',\r\n    role: localStorage.getItem('role')\r\n  };\r\n};\r\n\r\n/**\r\n * Save JWT token to localStorage\r\n */\r\nexport function saveToken(token) {\r\n  localStorage.setItem(TOKEN_KEY, token);\r\n  localStorage.setItem('token', token); // Ensure both keys are set\r\n}\r\n\r\n/**\r\n * Get JWT token from localStorage\r\n */\r\nexport const getToken = () => {\r\n  try {\r\n    // Try getting from token/sports_app_token storage keys\r\n    const token = localStorage.getItem('token') || localStorage.getItem(TOKEN_KEY);\r\n    if (token) return token;\r\n    \r\n    return null;\r\n  } catch (err) {\r\n    console.error('Error accessing localStorage:', err);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * Remove JWT token from localStorage\r\n */\r\nexport function removeToken() {\r\n  localStorage.removeItem(TOKEN_KEY);\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem(USER_DATA_KEY);\r\n}\r\n\r\n/**\r\n * Parse JWT token to get payload\r\n */\r\nexport function parseToken(token) {\r\n  if (!token) return null;\r\n  try {\r\n    // Split the token and get the payload part (2nd part)\r\n    const base64Url = token.split('.')[1];\r\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n    const jsonPayload = decodeURIComponent(\r\n      atob(base64)\r\n        .split('')\r\n        .map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2))\r\n        .join('')\r\n    );\r\n    return JSON.parse(jsonPayload);\r\n  } catch (error) {\r\n    console.error('Error parsing token:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Check if token is expired\r\n */\r\nexport function isTokenExpired() {\r\n  const token = getToken();\r\n  if (!token) return true;\r\n  \r\n  try {\r\n    const payload = parseToken(token);\r\n    if (!payload || !payload.exp) return true;\r\n    \r\n    // Get current time in seconds\r\n    const now = Math.floor(Date.now() / 1000);\r\n    return payload.exp < now;\r\n  } catch (error) {\r\n    console.error('Error checking token expiration:', error);\r\n    return true;\r\n  }\r\n}\r\n\r\n/**\r\n * Save user data to localStorage\r\n */\r\nexport function saveUserData(user) {\r\n  if (user) {\r\n    localStorage.setItem(USER_DATA_KEY, JSON.stringify(user));\r\n  }\r\n}\r\n\r\n/**\r\n * Get user data from localStorage\r\n */\r\nexport function getUserData() {\r\n  const userData = localStorage.getItem(USER_DATA_KEY);\r\n  if (userData) {\r\n    try {\r\n      return JSON.parse(userData);\r\n    } catch (e) {\r\n      console.error('Error parsing user data:', e);\r\n      return null;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * Logout user by removing token and userData\r\n */\r\nexport function logout() {\r\n  console.log(\"Logout function called\");\r\n  clearAuthData();\r\n  \r\n  // Force redirect to login\r\n  window.location.href = '/login';\r\n}\r\n\r\n/**\r\n * Handle authentication response from login/register\r\n */\r\nexport function handleAuthResponse(data) {\r\n  const { access_token, user } = data;\r\n  \r\n  if (access_token) {\r\n    saveToken(access_token);\r\n    localStorage.setItem('userId', user.id);\r\n    localStorage.setItem('token', access_token);\r\n    localStorage.setItem(TOKEN_KEY, access_token); // Ensure both keys are set\r\n    localStorage.setItem('username', user.username);\r\n    localStorage.setItem('isClubOwner', user.is_club_owner);\r\n    localStorage.setItem('role', user.role);\r\n    localStorage.setItem('isAuthenticated', 'true');\r\n    \r\n    if (user) {\r\n      saveUserData(user);\r\n    }\r\n    \r\n    return true;\r\n  }\r\n  \r\n  return false;\r\n}\r\n\r\n/**\r\n * Clear all authentication data from localStorage\r\n */\r\nexport function clearAuthData() {\r\n  console.log(\"Clearing all authentication data\");\r\n  \r\n  const keysToRemove = [\r\n    'userId',\r\n    'token',\r\n    TOKEN_KEY,\r\n    'username',\r\n    'isClubOwner',\r\n    'role',\r\n    'isAuthenticated',\r\n    USER_DATA_KEY\r\n  ];\r\n  \r\n  keysToRemove.forEach(key => {\r\n    if (localStorage.getItem(key)) {\r\n      localStorage.removeItem(key);\r\n    }\r\n  });\r\n  \r\n  // Also clear any auth cookies\r\n  document.cookie.split(\";\").forEach(function(c) {\r\n    document.cookie = c.replace(/^ +/, \"\").replace(/=.*/, \"=;expires=\" + new Date().toUTCString() + \";path=/\");\r\n  });\r\n}\r\n\r\n/**\r\n * Force logout - can be used to clear any existing credentials\r\n * during development or when authentication issues occur\r\n */\r\nexport function forceLogout() {\r\n  clearAuthData();\r\n}\r\n\r\nexport default {\r\n  saveToken,\r\n  getToken,\r\n  removeToken,\r\n  isAuthenticated,\r\n  parseToken,\r\n  isTokenExpired,\r\n  saveUserData,\r\n  getUserData,\r\n  logout,\r\n  handleAuthResponse\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}