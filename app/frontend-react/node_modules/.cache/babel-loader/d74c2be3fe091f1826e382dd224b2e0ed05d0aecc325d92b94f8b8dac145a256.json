{"ast":null,"code":"var _jsxFileName = \"F:\\\\Diplomna rabota 3\\\\app\\\\frontend-react\\\\src\\\\components\\\\ReservationModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport { reservationsAPI } from '../utils/api';\nimport { getToken, isAuthenticated } from '../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReservationModal = ({\n  club,\n  isOpen,\n  onClose,\n  isLoggedIn,\n  userData\n}) => {\n  _s();\n  const [date, setDate] = useState(format(new Date(), 'yyyy-MM-dd'));\n  const [timeSlots, setTimeSlots] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState(null);\n  const [duration, setDuration] = useState(1);\n  const [paymentMethod, setPaymentMethod] = useState(isLoggedIn ? \"cash\" : \"card\");\n  const [guestName, setGuestName] = useState(\"\");\n  const [estimatedPrice, setEstimatedPrice] = useState(0);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [submitting, setSubmitting] = useState(false);\n\n  // Reset form state when opened\n  useEffect(() => {\n    if (isOpen) {\n      // Refresh login status\n      const authCheck = isAuthenticated();\n      if (isLoggedIn !== authCheck) {\n        console.log(\"Authentication state mismatch, refreshing page\");\n        window.location.reload();\n        return;\n      }\n\n      // Default payment method\n      setPaymentMethod(authCheck ? \"cash\" : \"card\");\n\n      // Clear any previous errors or success messages\n      setError(\"\");\n      setSuccess(\"\");\n    }\n  }, [isOpen, isLoggedIn]);\n\n  // Calculate estimated price whenever duration or club changes\n  useEffect(() => {\n    if (club && duration) {\n      setEstimatedPrice(parseFloat(club.hourly_price) * parseFloat(duration));\n    }\n  }, [club, duration]);\n\n  // Fetch available time slots when date changes\n  useEffect(() => {\n    if (club && isOpen) {\n      fetchAvailableTimeSlots();\n    }\n  }, [date, club, isOpen]);\n  const fetchAvailableTimeSlots = async () => {\n    setLoading(true);\n    setError(\"\");\n    try {\n      console.log(`Fetching available slots for club ${club.id} on date ${date}`);\n      const data = await reservationsAPI.getAvailableTimeSlots(club.id, date);\n      console.log(\"Available time slots:\", data);\n      setTimeSlots(data || []);\n    } catch (error) {\n      console.error(\"Error fetching time slots:\", error);\n      setError(error.message || \"An error occurred while fetching available time slots\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(\"\");\n    setSubmitting(true);\n    console.log(\"Reservation form submitted\");\n\n    // Validation\n    if (!selectedTimeSlot) {\n      setError(\"Please select a time slot\");\n      setSubmitting(false);\n      return;\n    }\n    if (!isLoggedIn && !guestName) {\n      setError(\"Please enter your name for the reservation\");\n      setSubmitting(false);\n      return;\n    }\n    if (!isLoggedIn && paymentMethod === \"cash\") {\n      setError(\"Non-logged in users can only pay by card\");\n      setSubmitting(false);\n      return;\n    }\n\n    // Re-check if the time slot is still available\n    try {\n      // Refresh available slots right before submitting\n      const updatedSlots = await reservationsAPI.getAvailableTimeSlots(club.id, date);\n      const isStillAvailable = updatedSlots.some(slot => slot.start_time === selectedTimeSlot.start_time && slot.is_available);\n      if (!isStillAvailable) {\n        setError(\"This time slot is no longer available. Please select a different time.\");\n        setSelectedTimeSlot(null);\n        fetchAvailableTimeSlots();\n        setSubmitting(false);\n        return;\n      }\n    } catch (error) {\n      console.error(\"Error checking time slot availability:\", error);\n      // Continue with reservation attempt\n    }\n\n    // Authentication validation\n    if (isLoggedIn) {\n      const token = getToken();\n      if (!token) {\n        setError(\"Your session has expired. Please log in again.\");\n        setSubmitting(false);\n        return;\n      }\n\n      // Verify token is still valid with backend\n      try {\n        const response = await fetch(`http://localhost:8000/api/v1/users/me`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          console.error(\"Token validation failed:\", response.status);\n          setError(\"Your session is invalid. Please log in again.\");\n          setSubmitting(false);\n          localStorage.removeItem('token');\n          localStorage.removeItem('isAuthenticated');\n          return;\n        }\n      } catch (error) {\n        console.error(\"Token validation request failed:\", error);\n        setError(\"Could not verify your session. Please try again.\");\n        setSubmitting(false);\n        return;\n      }\n    }\n\n    // Prepare reservation data\n    const [hours, minutes] = selectedTimeSlot.start_time.split(':').map(Number);\n    const reservationDate = new Date(date);\n\n    // Create a proper UTC date object\n    const reservationTime = new Date(Date.UTC(reservationDate.getFullYear(), reservationDate.getMonth(), reservationDate.getDate(), hours, minutes, 0, 0));\n    const reservationData = {\n      club_id: club.id,\n      reservation_time: reservationTime.toISOString(),\n      // ISO string is timezone-aware\n      duration: parseFloat(duration),\n      payment_method: paymentMethod\n    };\n\n    // Add guest name for non-logged in users\n    if (!isLoggedIn) {\n      reservationData.guest_name = guestName;\n    }\n    console.log(\"Reservation data:\", reservationData);\n    try {\n      const data = await reservationsAPI.createReservation(reservationData);\n      console.log(\"Reservation created successfully:\", data);\n      setSuccess(\"Reservation created successfully!\");\n\n      // Reset form\n      setSelectedTimeSlot(null);\n      setDuration(1);\n      setPaymentMethod(isLoggedIn ? \"cash\" : \"card\");\n      setGuestName(\"\");\n\n      // Refresh available time slots immediately\n      await fetchAvailableTimeSlots();\n\n      // Also refresh again after a short delay to ensure we have the latest data\n      setTimeout(async () => {\n        await fetchAvailableTimeSlots();\n      }, 2000);\n    } catch (error) {\n      console.error(\"Error creating reservation:\", error);\n      if (error.status === 401) {\n        setError(\"You must be logged in to make a reservation. Please log in and try again.\");\n      } else if (error.status === 400 && error.message && error.message.includes(\"time slot is already booked\")) {\n        setError(\"This time slot is no longer available. Please select a different time.\");\n        // Refresh available slots to show updated availability\n        fetchAvailableTimeSlots();\n      } else {\n        setError(error.message || \"An error occurred during reservation creation\");\n      }\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-900 rounded-lg p-6 w-full max-w-md max-h-[90vh] overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold text-gray-100\",\n          children: [\"Reserve \", club.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"text-gray-400 hover:text-white\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-6 w-6\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M6 18L18 6M6 6l12 12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-900 text-white p-3 rounded mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-green-900 text-white p-3 rounded mb-4\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"reservation-date\",\n            className: \"block text-sm font-medium text-gray-300 mb-1\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"reservation-date\",\n            type: \"date\",\n            value: date,\n            onChange: e => setDate(e.target.value),\n            min: format(new Date(), 'yyyy-MM-dd'),\n            className: \"input\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-300 mb-1\",\n            children: \"Available Time Slots\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center py-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"animate-spin rounded-full h-6 w-6 border-t-2 border-b-2 border-primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this) : timeSlots.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-3 gap-2\",\n            children: timeSlots.map((slot, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              disabled: !slot.is_available,\n              onClick: () => setSelectedTimeSlot(slot),\n              className: `py-2 px-3 rounded text-center text-sm ${selectedTimeSlot === slot ? 'bg-primary text-white' : slot.is_available ? 'bg-gray-700 text-white hover:bg-gray-600' : 'bg-gray-800 text-gray-500 cursor-not-allowed'}`,\n              children: slot.start_time\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-400 text-sm\",\n            children: \"No time slots available for this date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"duration\",\n            className: \"block text-sm font-medium text-gray-300 mb-1\",\n            children: \"Duration (hours)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"duration\",\n            value: duration,\n            onChange: e => setDuration(e.target.value),\n            className: \"input\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"1 hour\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: \"2 hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"3\",\n              children: \"3 hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"4\",\n              children: \"4 hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-300 mb-1\",\n            children: \"Payment Method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-4\",\n            children: [isLoggedIn && /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"inline-flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                value: \"cash\",\n                checked: paymentMethod === \"cash\",\n                onChange: () => setPaymentMethod(\"cash\"),\n                className: \"form-radio text-primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 text-gray-300\",\n                children: \"Cash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"inline-flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                value: \"card\",\n                checked: paymentMethod === \"card\",\n                onChange: () => setPaymentMethod(\"card\"),\n                className: \"form-radio text-primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 text-gray-300\",\n                children: \"Card\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), !isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"guest-name\",\n            className: \"block text-sm font-medium text-gray-300 mb-1\",\n            children: \"Your Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"guest-name\",\n            type: \"text\",\n            value: guestName,\n            onChange: e => setGuestName(e.target.value),\n            className: \"input\",\n            placeholder: \"Enter your name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-400 mt-1\",\n            children: \"Required for non-logged in users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-800 p-3 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-300\",\n                children: \"Estimated Price:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xl font-semibold text-primary\",\n                children: [\"$\", estimatedPrice.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-400 mt-1\",\n              children: [\"Based on \", duration, \" hour\", duration !== 1 ? 's' : '', \" at $\", club.hourly_price, \"/hour\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            className: \"btn btn-secondary mr-2\",\n            disabled: submitting,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            disabled: submitting || !selectedTimeSlot || !isLoggedIn && !guestName,\n            children: submitting ? 'Reserving...' : 'Reserve'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n_s(ReservationModal, \"tG36/6m3Jp4MC3mW2NnvZNynQLA=\");\n_c = ReservationModal;\nexport default ReservationModal;\nvar _c;\n$RefreshReg$(_c, \"ReservationModal\");","map":{"version":3,"names":["React","useState","useEffect","format","reservationsAPI","getToken","isAuthenticated","jsxDEV","_jsxDEV","ReservationModal","club","isOpen","onClose","isLoggedIn","userData","_s","date","setDate","Date","timeSlots","setTimeSlots","loading","setLoading","selectedTimeSlot","setSelectedTimeSlot","duration","setDuration","paymentMethod","setPaymentMethod","guestName","setGuestName","estimatedPrice","setEstimatedPrice","error","setError","success","setSuccess","submitting","setSubmitting","authCheck","console","log","window","location","reload","parseFloat","hourly_price","fetchAvailableTimeSlots","id","data","getAvailableTimeSlots","message","handleSubmit","e","preventDefault","updatedSlots","isStillAvailable","some","slot","start_time","is_available","token","response","fetch","method","headers","ok","status","localStorage","removeItem","hours","minutes","split","map","Number","reservationDate","reservationTime","UTC","getFullYear","getMonth","getDate","reservationData","club_id","reservation_time","toISOString","payment_method","guest_name","createReservation","setTimeout","includes","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onSubmit","htmlFor","type","value","onChange","target","min","required","length","index","disabled","checked","placeholder","toFixed","_c","$RefreshReg$"],"sources":["F:/Diplomna rabota 3/app/frontend-react/src/components/ReservationModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { format } from 'date-fns';\r\nimport { reservationsAPI } from '../utils/api';\r\nimport { getToken, isAuthenticated } from '../utils/auth';\r\n\r\nconst ReservationModal = ({ club, isOpen, onClose, isLoggedIn, userData }) => {\r\n  const [date, setDate] = useState(format(new Date(), 'yyyy-MM-dd'));\r\n  const [timeSlots, setTimeSlots] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState(null);\r\n  const [duration, setDuration] = useState(1);\r\n  const [paymentMethod, setPaymentMethod] = useState(isLoggedIn ? \"cash\" : \"card\");\r\n  const [guestName, setGuestName] = useState(\"\");\r\n  const [estimatedPrice, setEstimatedPrice] = useState(0);\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [submitting, setSubmitting] = useState(false);\r\n  \r\n  // Reset form state when opened\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      // Refresh login status\r\n      const authCheck = isAuthenticated();\r\n      if (isLoggedIn !== authCheck) {\r\n        console.log(\"Authentication state mismatch, refreshing page\");\r\n        window.location.reload();\r\n        return;\r\n      }\r\n      \r\n      // Default payment method\r\n      setPaymentMethod(authCheck ? \"cash\" : \"card\");\r\n      \r\n      // Clear any previous errors or success messages\r\n      setError(\"\");\r\n      setSuccess(\"\");\r\n    }\r\n  }, [isOpen, isLoggedIn]);\r\n  \r\n  // Calculate estimated price whenever duration or club changes\r\n  useEffect(() => {\r\n    if (club && duration) {\r\n      setEstimatedPrice(parseFloat(club.hourly_price) * parseFloat(duration));\r\n    }\r\n  }, [club, duration]);\r\n  \r\n  // Fetch available time slots when date changes\r\n  useEffect(() => {\r\n    if (club && isOpen) {\r\n      fetchAvailableTimeSlots();\r\n    }\r\n  }, [date, club, isOpen]);\r\n  \r\n  const fetchAvailableTimeSlots = async () => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    \r\n    try {\r\n      console.log(`Fetching available slots for club ${club.id} on date ${date}`);\r\n      const data = await reservationsAPI.getAvailableTimeSlots(club.id, date);\r\n      console.log(\"Available time slots:\", data);\r\n      setTimeSlots(data || []);\r\n    } catch (error) {\r\n      console.error(\"Error fetching time slots:\", error);\r\n      setError(error.message || \"An error occurred while fetching available time slots\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n    setSubmitting(true);\r\n    \r\n    console.log(\"Reservation form submitted\");\r\n    \r\n    // Validation\r\n    if (!selectedTimeSlot) {\r\n      setError(\"Please select a time slot\");\r\n      setSubmitting(false);\r\n      return;\r\n    }\r\n    \r\n    if (!isLoggedIn && !guestName) {\r\n      setError(\"Please enter your name for the reservation\");\r\n      setSubmitting(false);\r\n      return;\r\n    }\r\n    \r\n    if (!isLoggedIn && paymentMethod === \"cash\") {\r\n      setError(\"Non-logged in users can only pay by card\");\r\n      setSubmitting(false);\r\n      return;\r\n    }\r\n    \r\n    // Re-check if the time slot is still available\r\n    try {\r\n      // Refresh available slots right before submitting\r\n      const updatedSlots = await reservationsAPI.getAvailableTimeSlots(club.id, date);\r\n      const isStillAvailable = updatedSlots.some(\r\n        slot => slot.start_time === selectedTimeSlot.start_time && slot.is_available\r\n      );\r\n      \r\n      if (!isStillAvailable) {\r\n        setError(\"This time slot is no longer available. Please select a different time.\");\r\n        setSelectedTimeSlot(null);\r\n        fetchAvailableTimeSlots();\r\n        setSubmitting(false);\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error checking time slot availability:\", error);\r\n      // Continue with reservation attempt\r\n    }\r\n    \r\n    // Authentication validation\r\n    if (isLoggedIn) {\r\n      const token = getToken();\r\n      if (!token) {\r\n        setError(\"Your session has expired. Please log in again.\");\r\n        setSubmitting(false);\r\n        return;\r\n      }\r\n      \r\n      // Verify token is still valid with backend\r\n      try {\r\n        const response = await fetch(`http://localhost:8000/api/v1/users/me`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          console.error(\"Token validation failed:\", response.status);\r\n          setError(\"Your session is invalid. Please log in again.\");\r\n          setSubmitting(false);\r\n          localStorage.removeItem('token');\r\n          localStorage.removeItem('isAuthenticated');\r\n          return;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Token validation request failed:\", error);\r\n        setError(\"Could not verify your session. Please try again.\");\r\n        setSubmitting(false);\r\n        return;\r\n      }\r\n    }\r\n    \r\n    // Prepare reservation data\r\n    const [hours, minutes] = selectedTimeSlot.start_time.split(':').map(Number);\r\n    const reservationDate = new Date(date);\r\n    \r\n    // Create a proper UTC date object\r\n    const reservationTime = new Date(\r\n      Date.UTC(\r\n        reservationDate.getFullYear(),\r\n        reservationDate.getMonth(),\r\n        reservationDate.getDate(),\r\n        hours,\r\n        minutes,\r\n        0,\r\n        0\r\n      )\r\n    );\r\n    \r\n    const reservationData = {\r\n      club_id: club.id,\r\n      reservation_time: reservationTime.toISOString(), // ISO string is timezone-aware\r\n      duration: parseFloat(duration),\r\n      payment_method: paymentMethod\r\n    };\r\n    \r\n    // Add guest name for non-logged in users\r\n    if (!isLoggedIn) {\r\n      reservationData.guest_name = guestName;\r\n    }\r\n    \r\n    console.log(\"Reservation data:\", reservationData);\r\n    \r\n    try {\r\n      const data = await reservationsAPI.createReservation(reservationData);\r\n      console.log(\"Reservation created successfully:\", data);\r\n      setSuccess(\"Reservation created successfully!\");\r\n      \r\n      // Reset form\r\n      setSelectedTimeSlot(null);\r\n      setDuration(1);\r\n      setPaymentMethod(isLoggedIn ? \"cash\" : \"card\");\r\n      setGuestName(\"\");\r\n      \r\n      // Refresh available time slots immediately\r\n      await fetchAvailableTimeSlots();\r\n      \r\n      // Also refresh again after a short delay to ensure we have the latest data\r\n      setTimeout(async () => {\r\n        await fetchAvailableTimeSlots();\r\n      }, 2000);\r\n    } catch (error) {\r\n      console.error(\"Error creating reservation:\", error);\r\n      if (error.status === 401) {\r\n        setError(\"You must be logged in to make a reservation. Please log in and try again.\");\r\n      } else if (error.status === 400 && error.message && error.message.includes(\"time slot is already booked\")) {\r\n        setError(\"This time slot is no longer available. Please select a different time.\");\r\n        // Refresh available slots to show updated availability\r\n        fetchAvailableTimeSlots();\r\n      } else {\r\n        setError(error.message || \"An error occurred during reservation creation\");\r\n      }\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n  \r\n  if (!isOpen) return null;\r\n  \r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\">\r\n      <div className=\"bg-gray-900 rounded-lg p-6 w-full max-w-md max-h-[90vh] overflow-y-auto\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h2 className=\"text-xl font-semibold text-gray-100\">Reserve {club.name}</h2>\r\n          <button \r\n            onClick={onClose}\r\n            className=\"text-gray-400 hover:text-white\"\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        \r\n        {error && (\r\n          <div className=\"bg-red-900 text-white p-3 rounded mb-4\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        \r\n        {success && (\r\n          <div className=\"bg-green-900 text-white p-3 rounded mb-4\">\r\n            {success}\r\n          </div>\r\n        )}\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group mb-4\">\r\n            <label htmlFor=\"reservation-date\" className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n              Date\r\n            </label>\r\n            <input\r\n              id=\"reservation-date\"\r\n              type=\"date\"\r\n              value={date}\r\n              onChange={(e) => setDate(e.target.value)}\r\n              min={format(new Date(), 'yyyy-MM-dd')}\r\n              className=\"input\"\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group mb-4\">\r\n            <label className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n              Available Time Slots\r\n            </label>\r\n            {loading ? (\r\n              <div className=\"flex justify-center py-2\">\r\n                <div className=\"animate-spin rounded-full h-6 w-6 border-t-2 border-b-2 border-primary\"></div>\r\n              </div>\r\n            ) : timeSlots.length > 0 ? (\r\n              <div className=\"grid grid-cols-3 gap-2\">\r\n                {timeSlots.map((slot, index) => (\r\n                  <button\r\n                    key={index}\r\n                    type=\"button\"\r\n                    disabled={!slot.is_available}\r\n                    onClick={() => setSelectedTimeSlot(slot)}\r\n                    className={`py-2 px-3 rounded text-center text-sm ${\r\n                      selectedTimeSlot === slot\r\n                        ? 'bg-primary text-white'\r\n                        : slot.is_available\r\n                        ? 'bg-gray-700 text-white hover:bg-gray-600'\r\n                        : 'bg-gray-800 text-gray-500 cursor-not-allowed'\r\n                    }`}\r\n                  >\r\n                    {slot.start_time}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <p className=\"text-gray-400 text-sm\">No time slots available for this date</p>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"form-group mb-4\">\r\n            <label htmlFor=\"duration\" className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n              Duration (hours)\r\n            </label>\r\n            <select\r\n              id=\"duration\"\r\n              value={duration}\r\n              onChange={(e) => setDuration(e.target.value)}\r\n              className=\"input\"\r\n              required\r\n            >\r\n              <option value=\"1\">1 hour</option>\r\n              <option value=\"2\">2 hours</option>\r\n              <option value=\"3\">3 hours</option>\r\n              <option value=\"4\">4 hours</option>\r\n            </select>\r\n          </div>\r\n          \r\n          <div className=\"form-group mb-4\">\r\n            <label className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n              Payment Method\r\n            </label>\r\n            <div className=\"flex space-x-4\">\r\n              {isLoggedIn && (\r\n                <label className=\"inline-flex items-center\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    value=\"cash\"\r\n                    checked={paymentMethod === \"cash\"}\r\n                    onChange={() => setPaymentMethod(\"cash\")}\r\n                    className=\"form-radio text-primary\"\r\n                  />\r\n                  <span className=\"ml-2 text-gray-300\">Cash</span>\r\n                </label>\r\n              )}\r\n              <label className=\"inline-flex items-center\">\r\n                <input\r\n                  type=\"radio\"\r\n                  value=\"card\"\r\n                  checked={paymentMethod === \"card\"}\r\n                  onChange={() => setPaymentMethod(\"card\")}\r\n                  className=\"form-radio text-primary\"\r\n                />\r\n                <span className=\"ml-2 text-gray-300\">Card</span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n          \r\n          {!isLoggedIn && (\r\n            <div className=\"form-group mb-4\">\r\n              <label htmlFor=\"guest-name\" className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n                Your Name\r\n              </label>\r\n              <input\r\n                id=\"guest-name\"\r\n                type=\"text\"\r\n                value={guestName}\r\n                onChange={(e) => setGuestName(e.target.value)}\r\n                className=\"input\"\r\n                placeholder=\"Enter your name\"\r\n                required\r\n              />\r\n              <p className=\"text-sm text-gray-400 mt-1\">Required for non-logged in users</p>\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"mb-6\">\r\n            <div className=\"bg-gray-800 p-3 rounded\">\r\n              <div className=\"flex justify-between items-center\">\r\n                <span className=\"text-gray-300\">Estimated Price:</span>\r\n                <span className=\"text-xl font-semibold text-primary\">${estimatedPrice.toFixed(2)}</span>\r\n              </div>\r\n              <p className=\"text-sm text-gray-400 mt-1\">\r\n                Based on {duration} hour{duration !== 1 ? 's' : ''} at ${club.hourly_price}/hour\r\n              </p>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"flex justify-end\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"btn btn-secondary mr-2\"\r\n              disabled={submitting}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              disabled={submitting || !selectedTimeSlot || (!isLoggedIn && !guestName)}\r\n            >\r\n              {submitting ? 'Reserving...' : 'Reserve'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReservationModal; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,eAAe,QAAQ,cAAc;AAC9C,SAASC,QAAQ,EAAEC,eAAe,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,IAAI;EAAEC,MAAM;EAAEC,OAAO;EAAEC,UAAU;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAACE,MAAM,CAAC,IAAIe,IAAI,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;EAClE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACsB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAAC0B,aAAa,EAAEC,gBAAgB,CAAC,GAAG3B,QAAQ,CAACY,UAAU,GAAG,MAAM,GAAG,MAAM,CAAC;EAChF,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC8B,cAAc,EAAEC,iBAAiB,CAAC,GAAG/B,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACgC,KAAK,EAAEC,QAAQ,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkC,OAAO,EAAEC,UAAU,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACoC,UAAU,EAAEC,aAAa,CAAC,GAAGrC,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACAC,SAAS,CAAC,MAAM;IACd,IAAIS,MAAM,EAAE;MACV;MACA,MAAM4B,SAAS,GAAGjC,eAAe,CAAC,CAAC;MACnC,IAAIO,UAAU,KAAK0B,SAAS,EAAE;QAC5BC,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;QAC7DC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;QACxB;MACF;;MAEA;MACAhB,gBAAgB,CAACW,SAAS,GAAG,MAAM,GAAG,MAAM,CAAC;;MAE7C;MACAL,QAAQ,CAAC,EAAE,CAAC;MACZE,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC,EAAE,CAACzB,MAAM,EAAEE,UAAU,CAAC,CAAC;;EAExB;EACAX,SAAS,CAAC,MAAM;IACd,IAAIQ,IAAI,IAAIe,QAAQ,EAAE;MACpBO,iBAAiB,CAACa,UAAU,CAACnC,IAAI,CAACoC,YAAY,CAAC,GAAGD,UAAU,CAACpB,QAAQ,CAAC,CAAC;IACzE;EACF,CAAC,EAAE,CAACf,IAAI,EAAEe,QAAQ,CAAC,CAAC;;EAEpB;EACAvB,SAAS,CAAC,MAAM;IACd,IAAIQ,IAAI,IAAIC,MAAM,EAAE;MAClBoC,uBAAuB,CAAC,CAAC;IAC3B;EACF,CAAC,EAAE,CAAC/B,IAAI,EAAEN,IAAI,EAAEC,MAAM,CAAC,CAAC;EAExB,MAAMoC,uBAAuB,GAAG,MAAAA,CAAA,KAAY;IAC1CzB,UAAU,CAAC,IAAI,CAAC;IAChBY,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACFM,OAAO,CAACC,GAAG,CAAC,qCAAqC/B,IAAI,CAACsC,EAAE,YAAYhC,IAAI,EAAE,CAAC;MAC3E,MAAMiC,IAAI,GAAG,MAAM7C,eAAe,CAAC8C,qBAAqB,CAACxC,IAAI,CAACsC,EAAE,EAAEhC,IAAI,CAAC;MACvEwB,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEQ,IAAI,CAAC;MAC1C7B,YAAY,CAAC6B,IAAI,IAAI,EAAE,CAAC;IAC1B,CAAC,CAAC,OAAOhB,KAAK,EAAE;MACdO,OAAO,CAACP,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDC,QAAQ,CAACD,KAAK,CAACkB,OAAO,IAAI,uDAAuD,CAAC;IACpF,CAAC,SAAS;MACR7B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM8B,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBpB,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;IACdE,aAAa,CAAC,IAAI,CAAC;IAEnBE,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;;IAEzC;IACA,IAAI,CAAClB,gBAAgB,EAAE;MACrBW,QAAQ,CAAC,2BAA2B,CAAC;MACrCI,aAAa,CAAC,KAAK,CAAC;MACpB;IACF;IAEA,IAAI,CAACzB,UAAU,IAAI,CAACgB,SAAS,EAAE;MAC7BK,QAAQ,CAAC,4CAA4C,CAAC;MACtDI,aAAa,CAAC,KAAK,CAAC;MACpB;IACF;IAEA,IAAI,CAACzB,UAAU,IAAIc,aAAa,KAAK,MAAM,EAAE;MAC3CO,QAAQ,CAAC,0CAA0C,CAAC;MACpDI,aAAa,CAAC,KAAK,CAAC;MACpB;IACF;;IAEA;IACA,IAAI;MACF;MACA,MAAMiB,YAAY,GAAG,MAAMnD,eAAe,CAAC8C,qBAAqB,CAACxC,IAAI,CAACsC,EAAE,EAAEhC,IAAI,CAAC;MAC/E,MAAMwC,gBAAgB,GAAGD,YAAY,CAACE,IAAI,CACxCC,IAAI,IAAIA,IAAI,CAACC,UAAU,KAAKpC,gBAAgB,CAACoC,UAAU,IAAID,IAAI,CAACE,YAClE,CAAC;MAED,IAAI,CAACJ,gBAAgB,EAAE;QACrBtB,QAAQ,CAAC,wEAAwE,CAAC;QAClFV,mBAAmB,CAAC,IAAI,CAAC;QACzBuB,uBAAuB,CAAC,CAAC;QACzBT,aAAa,CAAC,KAAK,CAAC;QACpB;MACF;IACF,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdO,OAAO,CAACP,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAC9D;IACF;;IAEA;IACA,IAAIpB,UAAU,EAAE;MACd,MAAMgD,KAAK,GAAGxD,QAAQ,CAAC,CAAC;MACxB,IAAI,CAACwD,KAAK,EAAE;QACV3B,QAAQ,CAAC,gDAAgD,CAAC;QAC1DI,aAAa,CAAC,KAAK,CAAC;QACpB;MACF;;MAEA;MACA,IAAI;QACF,MAAMwB,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;UACpEC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,eAAe,EAAE,UAAUJ,KAAK;UAClC;QACF,CAAC,CAAC;QAEF,IAAI,CAACC,QAAQ,CAACI,EAAE,EAAE;UAChB1B,OAAO,CAACP,KAAK,CAAC,0BAA0B,EAAE6B,QAAQ,CAACK,MAAM,CAAC;UAC1DjC,QAAQ,CAAC,+CAA+C,CAAC;UACzDI,aAAa,CAAC,KAAK,CAAC;UACpB8B,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;UAChCD,YAAY,CAACC,UAAU,CAAC,iBAAiB,CAAC;UAC1C;QACF;MACF,CAAC,CAAC,OAAOpC,KAAK,EAAE;QACdO,OAAO,CAACP,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QACxDC,QAAQ,CAAC,kDAAkD,CAAC;QAC5DI,aAAa,CAAC,KAAK,CAAC;QACpB;MACF;IACF;;IAEA;IACA,MAAM,CAACgC,KAAK,EAAEC,OAAO,CAAC,GAAGhD,gBAAgB,CAACoC,UAAU,CAACa,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;IAC3E,MAAMC,eAAe,GAAG,IAAIzD,IAAI,CAACF,IAAI,CAAC;;IAEtC;IACA,MAAM4D,eAAe,GAAG,IAAI1D,IAAI,CAC9BA,IAAI,CAAC2D,GAAG,CACNF,eAAe,CAACG,WAAW,CAAC,CAAC,EAC7BH,eAAe,CAACI,QAAQ,CAAC,CAAC,EAC1BJ,eAAe,CAACK,OAAO,CAAC,CAAC,EACzBV,KAAK,EACLC,OAAO,EACP,CAAC,EACD,CACF,CACF,CAAC;IAED,MAAMU,eAAe,GAAG;MACtBC,OAAO,EAAExE,IAAI,CAACsC,EAAE;MAChBmC,gBAAgB,EAAEP,eAAe,CAACQ,WAAW,CAAC,CAAC;MAAE;MACjD3D,QAAQ,EAAEoB,UAAU,CAACpB,QAAQ,CAAC;MAC9B4D,cAAc,EAAE1D;IAClB,CAAC;;IAED;IACA,IAAI,CAACd,UAAU,EAAE;MACfoE,eAAe,CAACK,UAAU,GAAGzD,SAAS;IACxC;IAEAW,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEwC,eAAe,CAAC;IAEjD,IAAI;MACF,MAAMhC,IAAI,GAAG,MAAM7C,eAAe,CAACmF,iBAAiB,CAACN,eAAe,CAAC;MACrEzC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEQ,IAAI,CAAC;MACtDb,UAAU,CAAC,mCAAmC,CAAC;;MAE/C;MACAZ,mBAAmB,CAAC,IAAI,CAAC;MACzBE,WAAW,CAAC,CAAC,CAAC;MACdE,gBAAgB,CAACf,UAAU,GAAG,MAAM,GAAG,MAAM,CAAC;MAC9CiB,YAAY,CAAC,EAAE,CAAC;;MAEhB;MACA,MAAMiB,uBAAuB,CAAC,CAAC;;MAE/B;MACAyC,UAAU,CAAC,YAAY;QACrB,MAAMzC,uBAAuB,CAAC,CAAC;MACjC,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC,OAAOd,KAAK,EAAE;MACdO,OAAO,CAACP,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,IAAIA,KAAK,CAACkC,MAAM,KAAK,GAAG,EAAE;QACxBjC,QAAQ,CAAC,2EAA2E,CAAC;MACvF,CAAC,MAAM,IAAID,KAAK,CAACkC,MAAM,KAAK,GAAG,IAAIlC,KAAK,CAACkB,OAAO,IAAIlB,KAAK,CAACkB,OAAO,CAACsC,QAAQ,CAAC,6BAA6B,CAAC,EAAE;QACzGvD,QAAQ,CAAC,wEAAwE,CAAC;QAClF;QACAa,uBAAuB,CAAC,CAAC;MAC3B,CAAC,MAAM;QACLb,QAAQ,CAACD,KAAK,CAACkB,OAAO,IAAI,+CAA+C,CAAC;MAC5E;IACF,CAAC,SAAS;MACRb,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;EAED,IAAI,CAAC3B,MAAM,EAAE,OAAO,IAAI;EAExB,oBACEH,OAAA;IAAKkF,SAAS,EAAC,4EAA4E;IAAAC,QAAA,eACzFnF,OAAA;MAAKkF,SAAS,EAAC,yEAAyE;MAAAC,QAAA,gBACtFnF,OAAA;QAAKkF,SAAS,EAAC,wCAAwC;QAAAC,QAAA,gBACrDnF,OAAA;UAAIkF,SAAS,EAAC,qCAAqC;UAAAC,QAAA,GAAC,UAAQ,EAACjF,IAAI,CAACkF,IAAI;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC5ExF,OAAA;UACEyF,OAAO,EAAErF,OAAQ;UACjB8E,SAAS,EAAC,gCAAgC;UAAAC,QAAA,eAE1CnF,OAAA;YAAK0F,KAAK,EAAC,4BAA4B;YAACR,SAAS,EAAC,SAAS;YAACS,IAAI,EAAC,MAAM;YAACC,OAAO,EAAC,WAAW;YAACC,MAAM,EAAC,cAAc;YAAAV,QAAA,eAC/GnF,OAAA;cAAM8F,aAAa,EAAC,OAAO;cAACC,cAAc,EAAC,OAAO;cAACC,WAAW,EAAE,CAAE;cAACC,CAAC,EAAC;YAAsB;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3F;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAEL/D,KAAK,iBACJzB,OAAA;QAAKkF,SAAS,EAAC,wCAAwC;QAAAC,QAAA,EACpD1D;MAAK;QAAA4D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,EAEA7D,OAAO,iBACN3B,OAAA;QAAKkF,SAAS,EAAC,0CAA0C;QAAAC,QAAA,EACtDxD;MAAO;QAAA0D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACN,eAEDxF,OAAA;QAAMkG,QAAQ,EAAEtD,YAAa;QAAAuC,QAAA,gBAC3BnF,OAAA;UAAKkF,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9BnF,OAAA;YAAOmG,OAAO,EAAC,kBAAkB;YAACjB,SAAS,EAAC,8CAA8C;YAAAC,QAAA,EAAC;UAE3F;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRxF,OAAA;YACEwC,EAAE,EAAC,kBAAkB;YACrB4D,IAAI,EAAC,MAAM;YACXC,KAAK,EAAE7F,IAAK;YACZ8F,QAAQ,EAAGzD,CAAC,IAAKpC,OAAO,CAACoC,CAAC,CAAC0D,MAAM,CAACF,KAAK,CAAE;YACzCG,GAAG,EAAE7G,MAAM,CAAC,IAAIe,IAAI,CAAC,CAAC,EAAE,YAAY,CAAE;YACtCwE,SAAS,EAAC,OAAO;YACjBuB,QAAQ;UAAA;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENxF,OAAA;UAAKkF,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9BnF,OAAA;YAAOkF,SAAS,EAAC,8CAA8C;YAAAC,QAAA,EAAC;UAEhE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EACP3E,OAAO,gBACNb,OAAA;YAAKkF,SAAS,EAAC,0BAA0B;YAAAC,QAAA,eACvCnF,OAAA;cAAKkF,SAAS,EAAC;YAAwE;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3F,CAAC,GACJ7E,SAAS,CAAC+F,MAAM,GAAG,CAAC,gBACtB1G,OAAA;YAAKkF,SAAS,EAAC,wBAAwB;YAAAC,QAAA,EACpCxE,SAAS,CAACsD,GAAG,CAAC,CAACf,IAAI,EAAEyD,KAAK,kBACzB3G,OAAA;cAEEoG,IAAI,EAAC,QAAQ;cACbQ,QAAQ,EAAE,CAAC1D,IAAI,CAACE,YAAa;cAC7BqC,OAAO,EAAEA,CAAA,KAAMzE,mBAAmB,CAACkC,IAAI,CAAE;cACzCgC,SAAS,EAAE,yCACTnE,gBAAgB,KAAKmC,IAAI,GACrB,uBAAuB,GACvBA,IAAI,CAACE,YAAY,GACjB,0CAA0C,GAC1C,8CAA8C,EACjD;cAAA+B,QAAA,EAEFjC,IAAI,CAACC;YAAU,GAZXwD,KAAK;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAaJ,CACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,gBAENxF,OAAA;YAAGkF,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAC;UAAqC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAC9E;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAENxF,OAAA;UAAKkF,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9BnF,OAAA;YAAOmG,OAAO,EAAC,UAAU;YAACjB,SAAS,EAAC,8CAA8C;YAAAC,QAAA,EAAC;UAEnF;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRxF,OAAA;YACEwC,EAAE,EAAC,UAAU;YACb6D,KAAK,EAAEpF,QAAS;YAChBqF,QAAQ,EAAGzD,CAAC,IAAK3B,WAAW,CAAC2B,CAAC,CAAC0D,MAAM,CAACF,KAAK,CAAE;YAC7CnB,SAAS,EAAC,OAAO;YACjBuB,QAAQ;YAAAtB,QAAA,gBAERnF,OAAA;cAAQqG,KAAK,EAAC,GAAG;cAAAlB,QAAA,EAAC;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACjCxF,OAAA;cAAQqG,KAAK,EAAC,GAAG;cAAAlB,QAAA,EAAC;YAAO;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAClCxF,OAAA;cAAQqG,KAAK,EAAC,GAAG;cAAAlB,QAAA,EAAC;YAAO;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAClCxF,OAAA;cAAQqG,KAAK,EAAC,GAAG;cAAAlB,QAAA,EAAC;YAAO;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAENxF,OAAA;UAAKkF,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9BnF,OAAA;YAAOkF,SAAS,EAAC,8CAA8C;YAAAC,QAAA,EAAC;UAEhE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRxF,OAAA;YAAKkF,SAAS,EAAC,gBAAgB;YAAAC,QAAA,GAC5B9E,UAAU,iBACTL,OAAA;cAAOkF,SAAS,EAAC,0BAA0B;cAAAC,QAAA,gBACzCnF,OAAA;gBACEoG,IAAI,EAAC,OAAO;gBACZC,KAAK,EAAC,MAAM;gBACZQ,OAAO,EAAE1F,aAAa,KAAK,MAAO;gBAClCmF,QAAQ,EAAEA,CAAA,KAAMlF,gBAAgB,CAAC,MAAM,CAAE;gBACzC8D,SAAS,EAAC;cAAyB;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpC,CAAC,eACFxF,OAAA;gBAAMkF,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,EAAC;cAAI;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3C,CACR,eACDxF,OAAA;cAAOkF,SAAS,EAAC,0BAA0B;cAAAC,QAAA,gBACzCnF,OAAA;gBACEoG,IAAI,EAAC,OAAO;gBACZC,KAAK,EAAC,MAAM;gBACZQ,OAAO,EAAE1F,aAAa,KAAK,MAAO;gBAClCmF,QAAQ,EAAEA,CAAA,KAAMlF,gBAAgB,CAAC,MAAM,CAAE;gBACzC8D,SAAS,EAAC;cAAyB;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpC,CAAC,eACFxF,OAAA;gBAAMkF,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,EAAC;cAAI;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EAEL,CAACnF,UAAU,iBACVL,OAAA;UAAKkF,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9BnF,OAAA;YAAOmG,OAAO,EAAC,YAAY;YAACjB,SAAS,EAAC,8CAA8C;YAAAC,QAAA,EAAC;UAErF;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRxF,OAAA;YACEwC,EAAE,EAAC,YAAY;YACf4D,IAAI,EAAC,MAAM;YACXC,KAAK,EAAEhF,SAAU;YACjBiF,QAAQ,EAAGzD,CAAC,IAAKvB,YAAY,CAACuB,CAAC,CAAC0D,MAAM,CAACF,KAAK,CAAE;YAC9CnB,SAAS,EAAC,OAAO;YACjB4B,WAAW,EAAC,iBAAiB;YAC7BL,QAAQ;UAAA;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACFxF,OAAA;YAAGkF,SAAS,EAAC,4BAA4B;YAAAC,QAAA,EAAC;UAAgC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3E,CACN,eAEDxF,OAAA;UAAKkF,SAAS,EAAC,MAAM;UAAAC,QAAA,eACnBnF,OAAA;YAAKkF,SAAS,EAAC,yBAAyB;YAAAC,QAAA,gBACtCnF,OAAA;cAAKkF,SAAS,EAAC,mCAAmC;cAAAC,QAAA,gBAChDnF,OAAA;gBAAMkF,SAAS,EAAC,eAAe;gBAAAC,QAAA,EAAC;cAAgB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACvDxF,OAAA;gBAAMkF,SAAS,EAAC,oCAAoC;gBAAAC,QAAA,GAAC,GAAC,EAAC5D,cAAc,CAACwF,OAAO,CAAC,CAAC,CAAC;cAAA;gBAAA1B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrF,CAAC,eACNxF,OAAA;cAAGkF,SAAS,EAAC,4BAA4B;cAAAC,QAAA,GAAC,WAC/B,EAAClE,QAAQ,EAAC,OAAK,EAACA,QAAQ,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,EAAC,OAAK,EAACf,IAAI,CAACoC,YAAY,EAAC,OAC7E;YAAA;cAAA+C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENxF,OAAA;UAAKkF,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/BnF,OAAA;YACEoG,IAAI,EAAC,QAAQ;YACbX,OAAO,EAAErF,OAAQ;YACjB8E,SAAS,EAAC,wBAAwB;YAClC0B,QAAQ,EAAE/E,UAAW;YAAAsD,QAAA,EACtB;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTxF,OAAA;YACEoG,IAAI,EAAC,QAAQ;YACblB,SAAS,EAAC,iBAAiB;YAC3B0B,QAAQ,EAAE/E,UAAU,IAAI,CAACd,gBAAgB,IAAK,CAACV,UAAU,IAAI,CAACgB,SAAW;YAAA8D,QAAA,EAExEtD,UAAU,GAAG,cAAc,GAAG;UAAS;YAAAwD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjF,EAAA,CAnYIN,gBAAgB;AAAA+G,EAAA,GAAhB/G,gBAAgB;AAqYtB,eAAeA,gBAAgB;AAAC,IAAA+G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}