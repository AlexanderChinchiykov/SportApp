{"ast":null,"code":"// Authentication utility functions\n\nconst API_URL = '/api/v1';\nconst TOKEN_KEY = 'jwt_token';\n\n// Login function\nexport const loginUser = async credentials => {\n  try {\n    const response = await fetch(`${API_URL}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials),\n      credentials: 'include' // Important for cookies\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(typeof errorData.detail === 'string' ? errorData.detail : JSON.stringify(errorData.detail));\n    }\n    const data = await response.json();\n\n    // Store auth data in localStorage\n    localStorage.setItem('userId', data.user.id);\n    localStorage.setItem('token', data.access_token);\n    localStorage.setItem('username', data.user.username);\n    localStorage.setItem('isClubOwner', data.user.is_club_owner);\n    localStorage.setItem('role', data.user.role);\n    return data;\n  } catch (error) {\n    console.error('Login error:', error);\n    throw error;\n  }\n};\n\n// Register function\nexport const registerUser = async userData => {\n  try {\n    const response = await fetch(`${API_URL}/auth/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData),\n      credentials: 'include'\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(typeof errorData.detail === 'string' ? errorData.detail : JSON.stringify(errorData.detail));\n    }\n    const data = await response.json();\n\n    // Store auth data in localStorage\n    localStorage.setItem('userId', data.user.id);\n    localStorage.setItem('token', data.access_token);\n    localStorage.setItem('username', data.user.username);\n    localStorage.setItem('isClubOwner', data.user.is_club_owner);\n    localStorage.setItem('role', data.user.role);\n    return data;\n  } catch (error) {\n    console.error('Registration error:', error);\n    throw error;\n  }\n};\n\n// Logout function\nexport const logoutUser = async () => {\n  try {\n    // Clear all auth data from localStorage\n    localStorage.removeItem('userId');\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    localStorage.removeItem('isClubOwner');\n    localStorage.removeItem('role');\n\n    // Optional: Call logout endpoint if your backend has one\n    // await fetch(`${API_URL}/auth/logout`, {\n    //   method: 'POST',\n    //   credentials: 'include'\n    // });\n\n    return true;\n  } catch (error) {\n    console.error('Logout error:', error);\n    throw error;\n  }\n};\n\n// Check if user is authenticated\nexport const isAuthenticated = () => {\n  return !!localStorage.getItem('token');\n};\n\n// Get current user info\nexport const getCurrentUser = () => {\n  if (!isAuthenticated()) {\n    return null;\n  }\n  return {\n    id: localStorage.getItem('userId'),\n    username: localStorage.getItem('username'),\n    isClubOwner: localStorage.getItem('isClubOwner') === 'true',\n    role: localStorage.getItem('role')\n  };\n};\nexport function saveToken(token) {\n  localStorage.setItem(TOKEN_KEY, token);\n}\nexport function getToken() {\n  return localStorage.getItem(TOKEN_KEY);\n}\nexport function removeToken() {\n  localStorage.removeItem(TOKEN_KEY);\n}","map":{"version":3,"names":["API_URL","TOKEN_KEY","loginUser","credentials","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","detail","data","localStorage","setItem","user","id","access_token","username","is_club_owner","role","error","console","registerUser","userData","logoutUser","removeItem","isAuthenticated","getItem","getCurrentUser","isClubOwner","saveToken","token","getToken","removeToken"],"sources":["F:/Diplomna rabota 3/app/frontend-react/src/utils/auth.js"],"sourcesContent":["// Authentication utility functions\r\n\r\nconst API_URL = '/api/v1';\r\nconst TOKEN_KEY = 'jwt_token';\r\n\r\n// Login function\r\nexport const loginUser = async (credentials) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/auth/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(credentials),\r\n      credentials: 'include' // Important for cookies\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(typeof errorData.detail === 'string' \r\n        ? errorData.detail \r\n        : JSON.stringify(errorData.detail));\r\n    }\r\n    \r\n    const data = await response.json();\r\n    \r\n    // Store auth data in localStorage\r\n    localStorage.setItem('userId', data.user.id);\r\n    localStorage.setItem('token', data.access_token);\r\n    localStorage.setItem('username', data.user.username);\r\n    localStorage.setItem('isClubOwner', data.user.is_club_owner);\r\n    localStorage.setItem('role', data.user.role);\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    console.error('Login error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Register function\r\nexport const registerUser = async (userData) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/auth/register`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(userData),\r\n      credentials: 'include'\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(typeof errorData.detail === 'string' \r\n        ? errorData.detail \r\n        : JSON.stringify(errorData.detail));\r\n    }\r\n    \r\n    const data = await response.json();\r\n    \r\n    // Store auth data in localStorage\r\n    localStorage.setItem('userId', data.user.id);\r\n    localStorage.setItem('token', data.access_token);\r\n    localStorage.setItem('username', data.user.username);\r\n    localStorage.setItem('isClubOwner', data.user.is_club_owner);\r\n    localStorage.setItem('role', data.user.role);\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    console.error('Registration error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Logout function\r\nexport const logoutUser = async () => {\r\n  try {\r\n    // Clear all auth data from localStorage\r\n    localStorage.removeItem('userId');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('username');\r\n    localStorage.removeItem('isClubOwner');\r\n    localStorage.removeItem('role');\r\n    \r\n    // Optional: Call logout endpoint if your backend has one\r\n    // await fetch(`${API_URL}/auth/logout`, {\r\n    //   method: 'POST',\r\n    //   credentials: 'include'\r\n    // });\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error('Logout error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Check if user is authenticated\r\nexport const isAuthenticated = () => {\r\n  return !!localStorage.getItem('token');\r\n};\r\n\r\n// Get current user info\r\nexport const getCurrentUser = () => {\r\n  if (!isAuthenticated()) {\r\n    return null;\r\n  }\r\n  \r\n  return {\r\n    id: localStorage.getItem('userId'),\r\n    username: localStorage.getItem('username'),\r\n    isClubOwner: localStorage.getItem('isClubOwner') === 'true',\r\n    role: localStorage.getItem('role')\r\n  };\r\n};\r\n\r\nexport function saveToken(token) {\r\n  localStorage.setItem(TOKEN_KEY, token);\r\n}\r\n\r\nexport function getToken() {\r\n  return localStorage.getItem(TOKEN_KEY);\r\n}\r\n\r\nexport function removeToken() {\r\n  localStorage.removeItem(TOKEN_KEY);\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}