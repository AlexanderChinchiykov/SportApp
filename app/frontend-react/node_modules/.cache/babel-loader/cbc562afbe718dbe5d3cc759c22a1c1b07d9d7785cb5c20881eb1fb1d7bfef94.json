{"ast":null,"code":"export const API_BASE = ''; // Use relative paths, proxy handles the rest\n\nexport async function apiRequest(path, {\n  method = 'GET',\n  body,\n  token\n} = {}) {\n  const headers = {\n    'Content-Type': 'application/json'\n  };\n  if (token) headers['Authorization'] = `Bearer ${token}`;\n  const res = await fetch(`${API_BASE}${path}`, {\n    method,\n    headers,\n    body: body ? JSON.stringify(body) : undefined,\n    credentials: 'include'\n  });\n  const data = await res.json().catch(() => ({}));\n  if (!res.ok) throw data;\n  return data;\n}","map":{"version":3,"names":["API_BASE","apiRequest","path","method","body","token","headers","res","fetch","JSON","stringify","undefined","credentials","data","json","catch","ok"],"sources":["F:/Diplomna rabota 3/app/frontend-react/src/utils/api.js"],"sourcesContent":["export const API_BASE = '' // Use relative paths, proxy handles the rest\r\n\r\nexport async function apiRequest(path, { method = 'GET', body, token } = {}) {\r\n  const headers = { 'Content-Type': 'application/json' };\r\n  if (token) headers['Authorization'] = `Bearer ${token}`;\r\n  const res = await fetch(`${API_BASE}${path}`, {\r\n    method,\r\n    headers,\r\n    body: body ? JSON.stringify(body) : undefined,\r\n    credentials: 'include',\r\n  });\r\n  const data = await res.json().catch(() => ({}));\r\n  if (!res.ok) throw data;\r\n  return data;\r\n} "],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,EAAE,EAAC;;AAE3B,OAAO,eAAeC,UAAUA,CAACC,IAAI,EAAE;EAAEC,MAAM,GAAG,KAAK;EAAEC,IAAI;EAAEC;AAAM,CAAC,GAAG,CAAC,CAAC,EAAE;EAC3E,MAAMC,OAAO,GAAG;IAAE,cAAc,EAAE;EAAmB,CAAC;EACtD,IAAID,KAAK,EAAEC,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUD,KAAK,EAAE;EACvD,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGR,QAAQ,GAAGE,IAAI,EAAE,EAAE;IAC5CC,MAAM;IACNG,OAAO;IACPF,IAAI,EAAEA,IAAI,GAAGK,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,GAAGO,SAAS;IAC7CC,WAAW,EAAE;EACf,CAAC,CAAC;EACF,MAAMC,IAAI,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;EAC/C,IAAI,CAACR,GAAG,CAACS,EAAE,EAAE,MAAMH,IAAI;EACvB,OAAOA,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}